// Code generated by cmd/cgo; DO NOT EDIT.

//line /tmp/build_aur/yay/src/yay-9.4.2/vendor/github.com/Jguer/go-alpm/sync.go:1:1
// db.go - Functions for database handling.
//
// Copyright (c) 2013 The go-alpm Authors
//
// MIT Licensed. See LICENSE for details.

package alpm

/*
#include <alpm.h>
*/
import _ "unsafe"

import "unsafe"

// NewVersion checks if there is a new version of the package in a given DBlist.
func (pkg *Package) SyncNewVersion(l DBList) *Package {
	ptr := func() *_Ctype_struct___alpm_pkg_t{ _cgo0 := /*line :18:37*/pkg.pmpkg; _cgo1 := /*line :19:3*/(*_Ctype_struct___alpm_list_t)(unsafe.Pointer(l.list)); _cgoCheckPointer(_cgo0); _cgoCheckPointer(_cgo1); return _Cfunc_alpm_sync_get_new_version(_cgo0, _cgo1); }()
	if ptr == nil {
		return nil
	}
	return &Package{ptr, l.handle}
}

func (h *Handle) SyncSysupgrade(enableDowngrade bool) error {
	intEnableDowngrade :=  /*line :27:24*/_Ctype_int /*line :27:29*/(0)

	if enableDowngrade {
		intEnableDowngrade =  /*line :30:24*/_Ctype_int /*line :30:29*/(1)
	}

	ret := func() _Ctype_int{ _cgo0 := /*line :33:32*/h.ptr; var _cgo1 _Ctype_int = /*line :33:39*/intEnableDowngrade; _cgoCheckPointer(_cgo0); return _Cfunc_alpm_sync_sysupgrade(_cgo0, _cgo1); }()
	if ret != 0 {
		return h.LastError()
	}

	return nil
}
