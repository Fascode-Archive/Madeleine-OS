// Code generated by cmd/cgo; DO NOT EDIT.

//line /tmp/build_aur/yay/src/yay-9.4.2/vendor/github.com/Jguer/go-alpm/trans.go:1:1
// db.go - Functions for database handling.
//
// Copyright (c) 2013 The go-alpm Authors
//
// MIT Licensed. See LICENSE for details.

package alpm

/*
#include <alpm.h>
*/
import _ "unsafe"

import (
	"unsafe"
)

func (h *Handle) TransInit(flags TransFlag) error {
	ret := func() _Ctype_int{ _cgo0 := /*line :19:27*/h.ptr; var _cgo1 _Ctype_int = _Ctype_int(flags); _cgoCheckPointer(_cgo0); return _Cfunc_alpm_trans_init(_cgo0, _cgo1); }()
	if ret != 0 {
		return h.LastError()
	}

	return nil
}

func (h *Handle) TransRelease() error {
	ret := func() _Ctype_int{ _cgo0 := /*line :28:30*/h.ptr; _cgoCheckPointer(_cgo0); return _Cfunc_alpm_trans_release(_cgo0); }()
	if ret != 0 {
		return h.LastError()
	}

	return nil
}

func (h *Handle) TransGetAdd() PackageList {
	pkgs := func() *_Ctype_struct___alpm_list_t{ _cgo0 := /*line :37:31*/h.ptr; _cgoCheckPointer(_cgo0); return _Cfunc_alpm_trans_get_add(_cgo0); }()
	return PackageList{(*list)(unsafe.Pointer(pkgs)), *h}
}

func (h *Handle) TransGetRemove() PackageList {
	pkgs := func() *_Ctype_struct___alpm_list_t{ _cgo0 := /*line :42:34*/h.ptr; _cgoCheckPointer(_cgo0); return _Cfunc_alpm_trans_get_remove(_cgo0); }()
	return PackageList{(*list)(unsafe.Pointer(pkgs)), *h}
}

func (h *Handle) TransGetFlags() (TransFlag, error) {
	flags := func() _Ctype_int{ _cgo0 := /*line :47:34*/h.ptr; _cgoCheckPointer(_cgo0); return _Cfunc_alpm_trans_get_flags(_cgo0); }()

	if flags == -1 {
		return -1, h.LastError()
	}

	return TransFlag(flags), nil
}
