// Code generated by cmd/cgo; DO NOT EDIT.

//line /tmp/build_aur/yay/src/yay-9.4.2/vendor/github.com/Jguer/go-alpm/version.go:1:1
package alpm

// #include <alpm.h>
import _ "unsafe"

import "unsafe"

// VerCmp performs version comparison according to Pacman conventions. Return
// value is <0 if and only if v1 is older than v2.
func VerCmp(v1, v2 string) int {
	c1 := ( /*line :11:8*/_Cfunc_CString /*line :11:16*/)(v1)
	c2 := ( /*line :12:8*/_Cfunc_CString /*line :12:16*/)(v2)
	defer func() func() { _cgo0 := /*line :13:15*/unsafe.Pointer(c1); return func() { _cgoCheckPointer(_cgo0); _Cfunc_free(_cgo0); }}()()
	defer func() func() { _cgo0 := /*line :14:15*/unsafe.Pointer(c2); return func() { _cgoCheckPointer(_cgo0); _Cfunc_free(_cgo0); }}()()
	result := ( /*line :15:12*/_Cfunc_alpm_pkg_vercmp /*line :15:28*/)(c1, c2)
	return int(result)
}
